name: Citadel CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8

      - name: Run format check
        run: |
          black --check .
          isort --check-only .
          flake8 .

  run-tests:
    name: Run Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: lint-and-format
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: |
          pip install -r local_agent/requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run tests
        run: pytest tests/

  build-and-scan:
    name: Build & Scan Docker Images
    runs-on: ubuntu-latest
    needs: run-tests
    strategy:
      matrix:
        service:
          - api_gateway
          - vector_search
          - knowledge_graph
          # Add all other services here
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.50.1/trivy_0.50.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.50.1_Linux-64bit.deb

      - name: Build Docker image
        run: |
          docker build -t ${{ matrix.service }}:latest -f ./${{ matrix.service }}/Dockerfile .

      - name: Scan image with Trivy
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL ${{ matrix.service }}:latest

  # Optional: Deployment job (example for a future setup)
  # deploy:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: build-and-scan
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Deploy to Kubernetes
  #       # Add deployment steps here, e.g., using kubectl or a GitOps tool
  #       run: echo "Deploying..."
